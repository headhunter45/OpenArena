<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="class_open_arena_1_1_camera" kind="class" prot="public">
    <compoundname>OpenArena::Camera</compoundname>
    <includes local="no">camera.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_open_arena_1_1_camera_1bb376200420ebb3a66d05ec0aa9349b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenArena::Camera::Camera</definition>
        <argsstring>()</argsstring>
        <name>Camera</name>
        <briefdescription>
<para>Creates a new <ref refid="class_open_arena_1_1_camera" kindref="compound">Camera</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a new <ref refid="class_open_arena_1_1_camera" kindref="compound">Camera</ref> object located at the origin, pointing at the negative z-axis with up being the positive y-axis. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="39" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_1a9aa0d60f8f88ed64e695dcd2a5ead25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3f</ref></type>
        <definition>Vec3f OpenArena::Camera::Position</definition>
        <argsstring>()</argsstring>
        <name>Position</name>
        <briefdescription>
<para>Returns this Camera&apos;s position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>This Camera&apos;s position as a <ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3d</ref> vector.</para></simplesect>
Returns this Camera&apos;s position. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="53" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="247" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_155fdaa3adbb54036cbeabb58621151c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3d</ref></type>
        <definition>Vec3f OpenArena::Camera::View</definition>
        <argsstring>()</argsstring>
        <name>View</name>
        <briefdescription>
<para>Returns the view vector of this camera. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view vector of this camera.</para></simplesect>
<simplesect kind="remark"><para></para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="66" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_11059827a14e8be84398b344e2c9a6ac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3d</ref></type>
        <definition>Vec3f OpenArena::Camera::UpVector</definition>
        <argsstring>()</argsstring>
        <name>UpVector</name>
        <briefdescription>
<para>Returns a vector pointing up with respect to the view. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A vector pointing up with respect to the view.</para></simplesect>
<simplesect kind="remark"><para></para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="79" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_190e293115cfc8b82e56c5975af2b2340" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3d</ref></type>
        <definition>Vec3f OpenArena::Camera::Strafe</definition>
        <argsstring>()</argsstring>
        <name>Strafe</name>
        <briefdescription>
<para>Returns this Camera&apos;s strafe vector. </para>        </briefdescription>
        <detaileddescription>
<para>The strafe axis is an axis perpendicular to both the up vector and the view vector.</para><para><simplesect kind="return"><para>This Camera&apos;s strafe vector.</para></simplesect>
<simplesect kind="remark"><para></para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="94" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_1e442c80b0291b9e72e188b8f267f0f8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenArena::Camera::PositionCamera</definition>
        <argsstring>(double xpos, double ypos, double zpos, double xview, double yview, double zview, double xup, double yup, double zup)</argsstring>
        <name>PositionCamera</name>
        <param>
          <type>double</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ypos</declname>
        </param>
        <param>
          <type>double</type>
          <declname>zpos</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xview</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yview</declname>
        </param>
        <param>
          <type>double</type>
          <declname>zview</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xup</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yup</declname>
        </param>
        <param>
          <type>double</type>
          <declname>zup</declname>
        </param>
        <briefdescription>
<para>Relocates and reorients this <ref refid="class_open_arena_1_1_camera" kindref="compound">Camera</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-coordinate of the new position vector.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ypos</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-coordinate of the new position vector.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zpos</parametername>
</parameternamelist>
<parameterdescription>
<para>The z-coordinate of the new position vector.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xview</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-coordinate of the new view vector.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yview</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-coordinate of the new view vector.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zview</parametername>
</parameternamelist>
<parameterdescription>
<para>The z-coordinate of the new view vector.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xup</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-coordinate of the new up vector.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yup</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-coordinate of the new up vector.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zup</parametername>
</parameternamelist>
<parameterdescription>
<para>The z-coordinate of the new up vector.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para></para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="133" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="58" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_1c647757a221f41f78487fb11fc9cedb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenArena::Camera::PositionCamera</definition>
        <argsstring>(Vec3d pos, Vec3d view, Vec3d up)</argsstring>
        <name>PositionCamera</name>
        <param>
          <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3d</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3d</ref></type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3d</ref></type>
          <declname>up</declname>
        </param>
        <briefdescription>
<para>Relocates and reorients this <ref refid="class_open_arena_1_1_camera" kindref="compound">Camera</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The new position vector.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>The new view vector.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>up</parametername>
</parameternamelist>
<parameterdescription>
<para>The new up vector.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para></para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="152" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_18d3d5a12988ca56c7d86caecab77f891" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenArena::Camera::RotateView</definition>
        <argsstring>(double angle, Vec3d axis)</argsstring>
        <name>RotateView</name>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <param>
          <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3d</ref></type>
          <declname>axis</declname>
        </param>
        <briefdescription>
<para>Rotates the camera a given ammount around a given axis. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of degrees to rotate.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector representing the axis to rotate around.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method passes the arguments to glRotatef()</para><para><simplesect kind="remark"><para></para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="170" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="189" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_174996afcd49ed188350c9dcaf46c9064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenArena::Camera::RotateView</definition>
        <argsstring>(double angle, double X, double Y, double Z)</argsstring>
        <name>RotateView</name>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>double</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Z</declname>
        </param>
        <briefdescription>
<para>Rotates the camera a given ammount around a given axis. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of degrees to rotate.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>The x component of the vector representing the axis to rotate around</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y component of the vector representing the axis to rotate around</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Z</parametername>
</parameternamelist>
<parameterdescription>
<para>The z component of the vector representing the axis to rotate around</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>The vector should be normalized as the values get passed directly to glRotatef().</para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="193" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="196" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_1c6d1ddc9aedc346967227e7892ced12c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenArena::Camera::SetViewByMouse</definition>
        <argsstring>(Window window)</argsstring>
        <name>SetViewByMouse</name>
        <param>
          <type><ref refid="class_open_arena_1_1_window" kindref="compound">Window</ref></type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Updates the view and up vectors based on mouse movement. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_open_arena_1_1_window" kindref="compound">Window</ref> used to get the mouse coordinates.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>This will be removed in favor of some sort of event trigger.</para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="207" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="76" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_17c509721078606ef3d1348be2314b704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenArena::Camera::StrafeCamera</definition>
        <argsstring>(double speed)</argsstring>
        <name>StrafeCamera</name>
        <param>
          <type>double</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
<para>Moves the camera along its strafe axis a given distance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance to move.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para></para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="220" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="223" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_1d9a8e82dfd65dc414630142769b2e939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenArena::Camera::MoveCamera</definition>
        <argsstring>(double speed)</argsstring>
        <name>MoveCamera</name>
        <param>
          <type>double</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
<para>Moves the camera along its view vector a given number of units. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance to move the camera.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para></para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="235" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="178" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_128bc2891a2d4f08cd3208bdf40cb7e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenArena::Camera::Update</definition>
        <argsstring>()</argsstring>
        <name>Update</name>
        <briefdescription>
<para>Recalculates the strafe vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para></para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="245" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="233" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_1157113367b26e66f41a7c03a96041237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenArena::Camera::Look</definition>
        <argsstring>()</argsstring>
        <name>Look</name>
        <briefdescription>
<para>Calls gluLookAt to tell OpenGL where to render from. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Uses the position, view, and up vectors.</para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="256" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="240" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_10431a9b2752d9074011a2bb29b1dfd21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenArena::Camera::RotateHorizontal</definition>
        <argsstring>(float angle)</argsstring>
        <name>RotateHorizontal</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Write brief comment for RotateHorizontal here. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>Description of parameter angle.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>&lt;exception</parametername>
</parameternamelist>
<parameterdescription>
<para>class&gt; Description of criteria for throwing this exception.</para></parameterdescription>
</parameteritem>
</parameterlist>
Write detailed description for RotateHorizontal here.</para><para><simplesect kind="remark"><para>Write remarks for RotateHorizontal here.</para></simplesect>
<simplesect kind="see"><para>Separate items with the &apos;|&apos; character. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="276" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_1dbaec1b05c7495babd28136204fad594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenArena::Camera::RotateVertical</definition>
        <argsstring>(float angle)</argsstring>
        <name>RotateVertical</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Write brief comment for RotateVertical here. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>Description of parameter angle.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>&lt;exception</parametername>
</parameternamelist>
<parameterdescription>
<para>class&gt; Description of criteria for throwing this exception.</para></parameterdescription>
</parameteritem>
</parameterlist>
Write detailed description for RotateVertical here.</para><para><simplesect kind="remark"><para>Write remarks for RotateVertical here.</para></simplesect>
<simplesect kind="see"><para>Separate items with the &apos;|&apos; character. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="296" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="272" bodyend="275"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_open_arena_1_1_camera_1219a76dc8e65945774e3528947f7d968" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3f</ref></type>
        <definition>Vec3f OpenArena::Camera::GetUpVector</definition>
        <argsstring>()</argsstring>
        <name>GetUpVector</name>
        <briefdescription>
<para>Write brief comment for GetUpVector here. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Write description of return value here.</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>&lt;exception</parametername>
</parameternamelist>
<parameterdescription>
<para>class&gt; Description of criteria for throwing this exception.</para></parameterdescription>
</parameteritem>
</parameterlist>
Write detailed description for GetUpVector here.</para><para><simplesect kind="remark"><para>Write remarks for GetUpVector here.</para></simplesect>
<simplesect kind="see"><para>Separate items with the &apos;|&apos; character. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="317" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_1d5a25265612eb37c611fde3d3b412469" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3f</ref></type>
        <definition>Vec3f OpenArena::Camera::GetRightVector</definition>
        <argsstring>()</argsstring>
        <name>GetRightVector</name>
        <briefdescription>
<para>Write brief comment for GetRightVector here. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Write description of return value here.</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>&lt;exception</parametername>
</parameternamelist>
<parameterdescription>
<para>class&gt; Description of criteria for throwing this exception.</para></parameterdescription>
</parameteritem>
</parameterlist>
Write detailed description for GetRightVector here.</para><para><simplesect kind="remark"><para>Write remarks for GetRightVector here.</para></simplesect>
<simplesect kind="see"><para>Separate items with the &apos;|&apos; character. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="337" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="282" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_142750b47e5606fb71ba715da9a4b3a9a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3f</ref></type>
        <definition>Vec3f OpenArena::Camera::GetForwardVector</definition>
        <argsstring>()</argsstring>
        <name>GetForwardVector</name>
        <briefdescription>
<para>Write brief comment for GetForwardVector here. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Write description of return value here.</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>&lt;exception</parametername>
</parameternamelist>
<parameterdescription>
<para>class&gt; Description of criteria for throwing this exception.</para></parameterdescription>
</parameteritem>
</parameterlist>
Write detailed description for GetForwardVector here.</para><para><simplesect kind="remark"><para>Write remarks for GetForwardVector here.</para></simplesect>
<simplesect kind="see"><para>Separate items with the &apos;|&apos; character. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="357" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_open_arena_1_1_camera_1d29881ee271ce07f1d4164e22ae1fdac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenArena::Camera::UpdateVectors</definition>
        <argsstring>()</argsstring>
        <name>UpdateVectors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="359" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.cpp" bodystart="292" bodyend="294"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_open_arena_1_1_camera_1d7de81b78e41164443888012d105ed55" prot="private" static="no" mutable="no">
        <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3f</ref></type>
        <definition>Vec3f OpenArena::Camera::m_vPosition</definition>
        <argsstring></argsstring>
        <name>m_vPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="362" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_open_arena_1_1_camera_149a63a47dbc79ce926fb6e68e65c4ade" prot="private" static="no" mutable="no">
        <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3f</ref></type>
        <definition>Vec3f OpenArena::Camera::m_vView</definition>
        <argsstring></argsstring>
        <name>m_vView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="363" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_open_arena_1_1_camera_1b48b08d52de388a5d1bd06a242714116" prot="private" static="no" mutable="no">
        <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3f</ref></type>
        <definition>Vec3f OpenArena::Camera::m_vUpVector</definition>
        <argsstring></argsstring>
        <name>m_vUpVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="364" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_open_arena_1_1_camera_1e5cd1fa4c3d236d319e667fdd407bfef" prot="private" static="no" mutable="no">
        <type><ref refid="class_open_arena_1_1_vec3d" kindref="compound">Vec3f</ref></type>
        <definition>Vec3f OpenArena::Camera::m_vStrafe</definition>
        <argsstring></argsstring>
        <name>m_vStrafe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="365" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="class_open_arena_1_1_camera" kindref="compound">Camera</ref> class represents a camera or view in 3-dimensional space. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_open_arena_1_1_camera" kindref="compound">Camera</ref> class maintains location, view, and orientation (up view) vectors. The <ref refid="class_open_arena_1_1_camera" kindref="compound">Camera</ref> can be moved and rotated in any direction. It includes a wrapper, <ref refid="class_open_arena_1_1_camera_1157113367b26e66f41a7c03a96041237" kindref="member">Look()</ref>, for gluLookAt.</para><para><simplesect kind="remark"><para></para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="7">
        <label>OpenArena::Camera</label>
        <link refid="class_open_arena_1_1_camera"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_vUpVector
m_vView
m_vStrafe
m_vPosition</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>OpenArena::Vec3d</label>
        <link refid="class_open_arena_1_1_vec3d"/>
      </node>
    </collaborationgraph>
    <location file="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" line="30" bodyfile="/Users/tomhicks/Documents/workspaces/OpenArena/openarena/src/camera.h" bodystart="29" bodyend="366"/>
    <listofallmembers>
      <member refid="class_open_arena_1_1_camera_1bb376200420ebb3a66d05ec0aa9349b9" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>Camera</name></member>
      <member refid="class_open_arena_1_1_camera_142750b47e5606fb71ba715da9a4b3a9a" prot="private" virt="non-virtual"><scope>OpenArena::Camera</scope><name>GetForwardVector</name></member>
      <member refid="class_open_arena_1_1_camera_1d5a25265612eb37c611fde3d3b412469" prot="private" virt="non-virtual"><scope>OpenArena::Camera</scope><name>GetRightVector</name></member>
      <member refid="class_open_arena_1_1_camera_1219a76dc8e65945774e3528947f7d968" prot="private" virt="non-virtual"><scope>OpenArena::Camera</scope><name>GetUpVector</name></member>
      <member refid="class_open_arena_1_1_camera_1157113367b26e66f41a7c03a96041237" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>Look</name></member>
      <member refid="class_open_arena_1_1_camera_1d7de81b78e41164443888012d105ed55" prot="private" virt="non-virtual"><scope>OpenArena::Camera</scope><name>m_vPosition</name></member>
      <member refid="class_open_arena_1_1_camera_1e5cd1fa4c3d236d319e667fdd407bfef" prot="private" virt="non-virtual"><scope>OpenArena::Camera</scope><name>m_vStrafe</name></member>
      <member refid="class_open_arena_1_1_camera_1b48b08d52de388a5d1bd06a242714116" prot="private" virt="non-virtual"><scope>OpenArena::Camera</scope><name>m_vUpVector</name></member>
      <member refid="class_open_arena_1_1_camera_149a63a47dbc79ce926fb6e68e65c4ade" prot="private" virt="non-virtual"><scope>OpenArena::Camera</scope><name>m_vView</name></member>
      <member refid="class_open_arena_1_1_camera_1d9a8e82dfd65dc414630142769b2e939" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>MoveCamera</name></member>
      <member refid="class_open_arena_1_1_camera_1a9aa0d60f8f88ed64e695dcd2a5ead25" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>Position</name></member>
      <member refid="class_open_arena_1_1_camera_1e442c80b0291b9e72e188b8f267f0f8b" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>PositionCamera</name></member>
      <member refid="class_open_arena_1_1_camera_1c647757a221f41f78487fb11fc9cedb9" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>PositionCamera</name></member>
      <member refid="class_open_arena_1_1_camera_10431a9b2752d9074011a2bb29b1dfd21" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>RotateHorizontal</name></member>
      <member refid="class_open_arena_1_1_camera_1dbaec1b05c7495babd28136204fad594" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>RotateVertical</name></member>
      <member refid="class_open_arena_1_1_camera_18d3d5a12988ca56c7d86caecab77f891" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>RotateView</name></member>
      <member refid="class_open_arena_1_1_camera_174996afcd49ed188350c9dcaf46c9064" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>RotateView</name></member>
      <member refid="class_open_arena_1_1_camera_1c6d1ddc9aedc346967227e7892ced12c" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>SetViewByMouse</name></member>
      <member refid="class_open_arena_1_1_camera_190e293115cfc8b82e56c5975af2b2340" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>Strafe</name></member>
      <member refid="class_open_arena_1_1_camera_17c509721078606ef3d1348be2314b704" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>StrafeCamera</name></member>
      <member refid="class_open_arena_1_1_camera_128bc2891a2d4f08cd3208bdf40cb7e21" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>Update</name></member>
      <member refid="class_open_arena_1_1_camera_1d29881ee271ce07f1d4164e22ae1fdac" prot="private" virt="non-virtual"><scope>OpenArena::Camera</scope><name>UpdateVectors</name></member>
      <member refid="class_open_arena_1_1_camera_11059827a14e8be84398b344e2c9a6ac6" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>UpVector</name></member>
      <member refid="class_open_arena_1_1_camera_155fdaa3adbb54036cbeabb58621151c7" prot="public" virt="non-virtual"><scope>OpenArena::Camera</scope><name>View</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
